####################################################################################################
# This is a processing pipeline for the Image -> GCode conversion
#
# All filters are applied in the sequence in which they are named.
#
# For debugging purpose you can show/hide each filter in the UI menu by the "menu" flag in the filter
# settings.
#
####################################################################################################

###########################################################################################
# The "common" section contains some meta information about the pipeline.
# This data is shown in the overview.
###########################################################################################
#
[common]
author = Andreas Herz
name = Carve Height Map from Image
description = Carves the height map of an grayscale image


[source]
zoom = 1
width = 640


###########################################################################################
# Blur the image to remove some possible noise. This is good for noisy background of
# bad light
###########################################################################################
#
[processing.image.smooth_average.Filter]
# the average blur factor
#
factor = 0
# visible in the user menu bar
#
menu = true


###########################################################################################
# Converts graylevel to black&white. The user can define the threshold in the UI
###########################################################################################
#
[processing.image.grayscale.Filter]
# The threshold defines all values below that "gray level" are not part of the outline to carve
#
threshold = 0
# visible in the user menu bar
#
menu = true


###########################################################################################
# Invert the image from Black&White to White&Black
###########################################################################################
#
[processing.image.invert.Filter]
# Not visible in the menu bar
#
menu = true


###########################################################################################
# Calculate the contour from the "WHITE" parts of the image.
###########################################################################################
#
[processing.image.to_contours.Filter]
# Not visible in the menu bar
#
menu = false


###########################################################################################
# Moves the contour into the center of the workarea.
###########################################################################################
#
[processing.contours.center.Filter]
# Not visible in the menu bar
#
menu = false


###########################################################################################
# Moves the contour into the center of the workarea.
###########################################################################################
#
[processing.contours.scale.Filter]
# Not visible in the menu bar
#
menu = true
width_in_micro_m = 47400
display_unit = cm


###########################################################################################
# Scales the contour to the given "WIDTH" and create GCODE from the contour
###########################################################################################
#
[processing.contours.to_gcode.Filter]
# depth of the carving in [mm]
#
depth_in_mm = 0.5
depth_range_min = 0.1
depth_range_max = 3.0

# feed rate of the mill in [mm]/[minutes]
# feed rapid, move without carving, is two time faster
feed_rate = 150

# clearance above the workpiece in [mm]
#
clearance = 10

# visible in the UI. User can interactively change the width
#
menu = true
